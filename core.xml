<Ui xmlns="http://www.blizzard.com/wow/ui/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.blizzard.com/wow/ui/
..\..\FrameXML\UI.xsd">

	<Frame name="BattlePetTabTemplate" enableMouse="true" virtual="true">
		<Size x="42" y="50"/>
		<Anchors>
			<Anchor point="TOPLEFT" x="0" y="0"/>
		</Anchors>
		<Layers>
			<Layer level="BACKGROUND">
				<Texture file="Interface\GuildBankFrame\UI-GuildBankFrame-Tab">
					<Size x="64" y="64"/>
					<Anchors>
						<Anchor point="TOPLEFT"/>
					</Anchors>
				</Texture>
			</Layer>
		</Layers>
		<Frames>
			<CheckButton name="$parentButton" parentKey="button">
				<Size x="36" y="34"/>
				<Anchors>
					<Anchor point="TOPLEFT" x="2" y="-8"/>
				</Anchors>
				<Layers>
					<Layer level="BORDER">
						<Texture name="$parentIconTexture" parentKey="icon"/>
						<FontString name="$parentCount" inherits="NumberFontNormal" justifyH="RIGHT" hidden="true">
							<Anchors>
								<Anchor point="BOTTOMRIGHT" x="-5" y="2"/>
							</Anchors>
						</FontString>
					</Layer>
					<Layer level="ARTWORK">
						<Texture name="$parentSearchOverlay" parentKey="searchOverlay" setAllPoints="true" hidden="true" textureSubLevel="4">
							<Color r="0" g="0" b="0" a="0.8"/>
						</Texture>
					</Layer>
				</Layers>
				<Scripts>
					<OnLoad>
						self:RegisterForClicks("LeftButtonUp", "RightButtonUp")
						self:RegisterForDrag("LeftButton")
						self:SetMotionScriptsWhileDisabled(true)
					</OnLoad>
					<OnClick>
						BattlePetTab_OnClick(self, button, self:GetParent():GetID())
					</OnClick>
					<OnDragStart>
						BattlePetTab_OnDrag(self, button, self:GetParent():GetID())
					</OnDragStart>
					<OnEnter>
						if self.tooltip or self.tooltip2 then
							GameTooltip:SetOwner(self, "ANCHOR_LEFT")
							GameTooltip:ClearLines()
							if type(self.tooltip2 or self.tooltip) == "table" then
								for _, line in ipairs(self.tooltip2 or self.tooltip) do
									GameTooltip:AddLine(line)
								end
							else
								GameTooltip:AddLine(self.tooltip2 or self.tooltip)
							end
							if not self.tooltip2 and not self.newTeam and not self.snapshotManager then
								GameTooltip:AddLine("|cff999999Right-click to delete.|r")
								GameTooltip:AddLine("|cff999999Right-click with modifier to rename.|r")
								GameTooltip:AddLine("|cff999999Drag to pickup macro.|r")
							end
							GameTooltip:Show()
						end
					</OnEnter>
					<OnLeave>
						GameTooltip:Hide()
					</OnLeave>
				</Scripts>
				<NormalTexture name="$parentNormalTexture" file="Interface\Buttons\UI-Quickslot2">
					<Size x="60" y="60"/>
					<Anchors>
						<Anchor point="CENTER" x="0" y="-1"/>
					</Anchors>
				</NormalTexture>
				<PushedTexture file="Interface\Buttons\UI-Quickslot-Depress"/>
				<HighlightTexture file="Interface\Buttons\ButtonHilight-Square" alphaMode="ADD"/>
				<CheckedTexture alphaMode="ADD" file="Interface\Buttons\CheckButtonHilight" parentKey="checked"/>
			</CheckButton>
		</Frames>
	</Frame>

	<!-- flyout snapshot manager -->

	<Texture name="BattlePetTabFlyoutTexture" file="Interface\PaperDollInfoFrame\UI-GearManager-Flyout" hidden="true" virtual="true"/>

	<Button name="BattlePetTabFlyoutButtonTemplate" inherits="ItemButtonTemplate" virtual="true">
		<Scripts>
			<OnLoad>
				self:RegisterForClicks("LeftButtonUp", "RightButtonUp")
				self:SetMotionScriptsWhileDisabled(true)
			</OnLoad>
			<OnEnter>
				if self.UpdateTooltip then
					self:UpdateTooltip()
				end
			</OnEnter>
			<OnLeave>
				GameTooltip:Hide()
				ResetCursor()
			</OnLeave>
			<OnClick>
				if button == "LeftButton" then
					local flyout = BattlePetTabFlyoutFrame
					if flyout:IsVisible() then
						flyout:Hide()
					end
				end
				BattlePetTabFlyout_OnClick(self, button)
			</OnClick>
		</Scripts>
	</Button>	

	<Frame name="BattlePetTabFlyoutFrame" hidden="true" enableMouse="false" frameStrata="HIGH">
		<Size x="43" y="43"/>
		<Frames>
			<Frame name="$parentButtons" frameStrata="HIGH" enableMouse="true" parentKey="buttonFrame" clampedToScreen="true">
				<Anchors>
					<Anchor point="TOPLEFT" relativePoint="TOPRIGHT">
						<Offset x="0" y="0"/>
					</Anchor>
				</Anchors>
				<Layers>
					<Layer level="BACKGROUND">
						<Texture parentKey="bg1" inherits="BattlePetTabFlyoutTexture">
							<Anchors>
								<Anchor point="TOPLEFT">
									<Offset x="-5" y="4"/>
								</Anchor>
							</Anchors>
						</Texture>
					</Layer>
				</Layers>
				<Scripts>
					<OnLoad>
						self.numBGs = 1
					</OnLoad>
				</Scripts>
			</Frame>
		</Frames>
		<Scripts>
			<OnLoad>
				self.popoutButtons = {}
				self.buttons = {}
				self.snapshots = {}
			</OnLoad>
			<OnShow>
				if not BattlePetTabsTabManager.button:IsEnabled() then
					return self:Hide() -- can't show the frame if the parent button is disabled
				end
				BattlePetTabFlyout_OnShow(self)
				BattlePetTabsTabManager.button:SetChecked(true) -- checked state depends if this popup is shown or not
			</OnShow>
			<OnHide>
				if BattlePetTabFlyoutPopupFrame.skipHide then
					BattlePetTabFlyoutPopupFrame.skipHide = nil
				else
					BattlePetTabFlyoutPopupFrame:Hide()
					BattlePetTabsTabManager.button:SetChecked(false) -- checked state depends if this popup is shown or not
				end
			</OnHide>
			<OnUpdate>
				local managerButton = self.managerButton
				if managerButton and managerButton:IsMouseOver() then
					local onEnterFunc = managerButton:GetScript("OnEnter")
					if onEnterFunc then
						onEnterFunc(managerButton)
					end
				end
			</OnUpdate>
		</Scripts>
	</Frame>

	<!-- snapshot rename and icon picker -->

	<CheckButton name="BattlePetTabFlyoutPopupButtonTemplate" inherits="SimplePopupButtonTemplate" virtual="true">
		<Scripts>
			<OnClick>
				local iconIndex = self:GetID() + FauxScrollFrame_GetOffset(BattlePetTabFlyoutPopupFrame.scroll) * 5 -- NUM_ICONS_PER_ROW
				BattlePetTabFlyoutPopupFrame.IconSelect(iconIndex)
			</OnClick>
		</Scripts>
		<NormalTexture name="$parentIcon" parentKey="icon" nonBlocking="true">
			<Size x="36" y="36"/>
			<Anchors>
				<Anchor point="CENTER" x="0" y="-1"/>
			</Anchors>
		</NormalTexture>
		<HighlightTexture alphaMode="ADD" file="Interface\Buttons\ButtonHilight-Square"/>
		<CheckedTexture alphaMode="ADD" file="Interface\Buttons\CheckButtonHilight"/>
	</CheckButton>

	<Frame name="BattlePetTabFlyoutPopupFrame" toplevel="true" parent="UIParent" frameStrata="HIGH" movable="false" enableMouse="true" hidden="true">
		<Size x="297" y="298"/>
		<Anchors>
			<Anchor point="TOPLEFT" relativeTo="BattlePetTabFlyoutFrame" relativePoint="TOPRIGHT" x="0" y="0"/>
		</Anchors>
		<Layers>
			<Layer level="BACKGROUND">
				<Texture file="Interface\MacroFrame\MacroPopup-TopLeft">
					<Size x="256" y="256"/>
					<Anchors>
						<Anchor point="TOPLEFT"/>
					</Anchors>
				</Texture>
				<Texture file="Interface\MacroFrame\MacroPopup-TopRight">
					<Size x="64" y="256"/>
					<Anchors>
						<Anchor point="TOPLEFT" x="256" y="0"/>
					</Anchors>
				</Texture>
				<Texture file="Interface\MacroFrame\MacroPopup-BotLeft">
					<Size x="256" y="64"/>
					<Anchors>
						<Anchor point="TOPLEFT" x="0" y="-256"/>
					</Anchors>
				</Texture>
				<Texture file="Interface\MacroFrame\MacroPopup-BotRight">
					<Size x="64" y="64"/>
					<Anchors>
						<Anchor point="TOPLEFT" x="256" y="-256"/>
					</Anchors>
				</Texture>
				<FontString inherits="GameFontHighlightSmall" text="Enter Snapshot Name:">
					<Anchors>
						<Anchor point="TOPLEFT" x="24" y="-21"/>
					</Anchors>
				</FontString>
				<FontString inherits="GameFontHighlightSmall" text="Choose an Icon:">
					<Anchors>
						<Anchor point="TOPLEFT" x="24" y="-69"/>
					</Anchors>
				</FontString>
			</Layer>
		</Layers>
		<Frames>
			<EditBox name="$parentEditBox" parentKey="editBox" letters="30" historyLines="0">
				<Size x="182" y="20"/>
				<Anchors>
					<Anchor point="TOPLEFT" x="29" y="-35"/>
				</Anchors>
				<Layers>
					<Layer level="BACKGROUND">
						<Texture name="$parentNameLeft" parentKey="nameLeft" file="Interface\ClassTrainerFrame\UI-ClassTrainer-FilterBorder">
							<Size x="12" y="29"/>
							<Anchors>
								<Anchor point="TOPLEFT" x="-11" y="0"/>
							</Anchors>
							<TexCoords left="0" right="0.09375" top="0" bottom="1.0"/>
						</Texture>
						<Texture name="$parentNameMiddle" parentKey="nameMiddle" file="Interface\ClassTrainerFrame\UI-ClassTrainer-FilterBorder">
							<Size x="175" y="29"/>
							<Anchors>
								<Anchor point="LEFT" relativeTo="$parentNameLeft" relativePoint="RIGHT"/>
							</Anchors>
							<TexCoords left="0.09375" right="0.90625" top="0" bottom="1.0"/>
						</Texture>
						<Texture name="$parentNameRight" parentKey="nameRight" file="Interface\ClassTrainerFrame\UI-ClassTrainer-FilterBorder">
							<Size x="12" y="29"/>
							<Anchors>
								<Anchor point="LEFT" relativeTo="$parentNameMiddle" relativePoint="RIGHT"/>
							</Anchors>
							<TexCoords left="0.90625" right="1.0" top="0" bottom="1.0"/>
						</Texture>
					</Layer>
				</Layers>
				<Scripts>
					<OnTextChanged>
						if userInput then
							local text = self:GetText()
							text = string.gsub(text, "\"", "")
							self:SetText(text)
						end
					</OnTextChanged>
					<OnEscapePressed>
						BattlePetTabFlyoutPopupFrame:Hide()
					</OnEscapePressed>
					<OnEnterPressed>
						if BattlePetTabFlyoutPopupFrame.okay:IsEnabled() then
							BattlePetTabFlyoutPopupFrame:Okay()
						end
					</OnEnterPressed>
				</Scripts>
				<FontString inherits="ChatFontNormal"/>
			</EditBox>
			<ScrollFrame name="$parentScrollFrame" parentKey="scroll" inherits="ListScrollFrameTemplate">
				<Size x="296" y="195"/>
				<Anchors>
					<Anchor point="TOPRIGHT" relativeTo="$parent" relativePoint="TOPRIGHT" x="-39" y="-67"/>
				</Anchors>
				<Scripts>
					<OnVerticalScroll>
						FauxScrollFrame_OnVerticalScroll(self, offset, 36, BattlePetTabFlyoutPopupFrame.Update) -- MACRO_ICON_ROW_HEIGHT
					</OnVerticalScroll>
				</Scripts>
			</ScrollFrame>
			<CheckButton name="$parentButton1" parentKey="button1" inherits="BattlePetTabFlyoutPopupButtonTemplate" id="1">
				<Anchors>
				<Anchor point="TOPLEFT" x="24" y="-85"/>
				</Anchors>
			</CheckButton>
			<CheckButton name="$parentButton2" parentKey="button2" inherits="BattlePetTabFlyoutPopupButtonTemplate" id="2">
				<Anchors>
					<Anchor point="LEFT" relativeTo="$parentButton1" relativePoint="RIGHT" x="10" y="0"/>
				</Anchors>
			</CheckButton>
			<CheckButton name="$parentButton3" parentKey="button3" inherits="BattlePetTabFlyoutPopupButtonTemplate" id="3">
				<Anchors>
					<Anchor point="LEFT" relativeTo="$parentButton2" relativePoint="RIGHT" x="10" y="0"/>
				</Anchors>
			</CheckButton>
			<CheckButton name="$parentButton4" parentKey="button4" inherits="BattlePetTabFlyoutPopupButtonTemplate" id="4">
				<Anchors>
					<Anchor point="LEFT" relativeTo="$parentButton3" relativePoint="RIGHT" x="10" y="0"/>
				</Anchors>
			</CheckButton>
			<CheckButton name="$parentButton5" parentKey="button5" inherits="BattlePetTabFlyoutPopupButtonTemplate" id="5">
				<Anchors>
					<Anchor point="LEFT" relativeTo="$parentButton4" relativePoint="RIGHT" x="10" y="0"/>
				</Anchors>
			</CheckButton>
			<CheckButton name="$parentButton6" parentKey="button6" inherits="BattlePetTabFlyoutPopupButtonTemplate" id="6">
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="$parentButton1" relativePoint="BOTTOMLEFT" x="0" y="-8"/>
				</Anchors>
			</CheckButton>
			<CheckButton name="$parentButton7" parentKey="button7" inherits="BattlePetTabFlyoutPopupButtonTemplate" id="7">
				<Anchors>
					<Anchor point="LEFT" relativeTo="$parentButton6" relativePoint="RIGHT" x="10" y="0"/>
				</Anchors>
			</CheckButton>
			<CheckButton name="$parentButton8" parentKey="button8" inherits="BattlePetTabFlyoutPopupButtonTemplate" id="8">
				<Anchors>
					<Anchor point="LEFT" relativeTo="$parentButton7" relativePoint="RIGHT" x="10" y="0"/>
				</Anchors>
			</CheckButton>
			<CheckButton name="$parentButton9" parentKey="button9" inherits="BattlePetTabFlyoutPopupButtonTemplate" id="9">
				<Anchors>
					<Anchor point="LEFT" relativeTo="$parentButton8" relativePoint="RIGHT" x="10" y="0"/>
				</Anchors>
			</CheckButton>
			<CheckButton name="$parentButton10" parentKey="button10" inherits="BattlePetTabFlyoutPopupButtonTemplate" id="10">
				<Anchors>
					<Anchor point="LEFT" relativeTo="$parentButton9" relativePoint="RIGHT" x="10" y="0"/>
				</Anchors>
			</CheckButton>
			<CheckButton name="$parentButton11" parentKey="button11" inherits="BattlePetTabFlyoutPopupButtonTemplate" id="11">
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="$parentButton6" relativePoint="BOTTOMLEFT" x="0" y="-8"/>
				</Anchors>
			</CheckButton>
			<CheckButton name="$parentButton12" parentKey="button12" inherits="BattlePetTabFlyoutPopupButtonTemplate" id="12">
				<Anchors>
					<Anchor point="LEFT" relativeTo="$parentButton11" relativePoint="RIGHT" x="10" y="0"/>
				</Anchors>
			</CheckButton>
			<CheckButton name="$parentButton13" parentKey="button13" inherits="BattlePetTabFlyoutPopupButtonTemplate" id="13">
				<Anchors>
					<Anchor point="LEFT" relativeTo="$parentButton12" relativePoint="RIGHT" x="10" y="0"/>
				</Anchors>
			</CheckButton>
			<CheckButton name="$parentButton14" parentKey="button14" inherits="BattlePetTabFlyoutPopupButtonTemplate" id="14">
				<Anchors>
					<Anchor point="LEFT" relativeTo="$parentButton13" relativePoint="RIGHT" x="10" y="0"/>
				</Anchors>
			</CheckButton>
			<CheckButton name="$parentButton15" parentKey="button15" inherits="BattlePetTabFlyoutPopupButtonTemplate" id="15">
				<Anchors>
					<Anchor point="LEFT" relativeTo="$parentButton14" relativePoint="RIGHT" x="10" y="0"/>
				</Anchors>
			</CheckButton>
			<CheckButton name="$parentButton16" parentKey="button16" inherits="BattlePetTabFlyoutPopupButtonTemplate" id="16">
				<Anchors>
					<Anchor point="TOPLEFT" relativeTo="$parentButton11" relativePoint="BOTTOMLEFT" x="0" y="-8"/>
				</Anchors>
			</CheckButton>
			<CheckButton name="$parentButton17" parentKey="button17" inherits="BattlePetTabFlyoutPopupButtonTemplate" id="17">
				<Anchors>
					<Anchor point="LEFT" relativeTo="$parentButton16" relativePoint="RIGHT" x="10" y="0"/>
				</Anchors>
			</CheckButton>
			<CheckButton name="$parentButton18" parentKey="button18" inherits="BattlePetTabFlyoutPopupButtonTemplate" id="18">
				<Anchors>
					<Anchor point="LEFT" relativeTo="$parentButton17" relativePoint="RIGHT" x="10" y="0"/>
				</Anchors>
			</CheckButton>
			<CheckButton name="$parentButton19" parentKey="button19" inherits="BattlePetTabFlyoutPopupButtonTemplate" id="19">
				<Anchors>
					<Anchor point="LEFT" relativeTo="$parentButton18" relativePoint="RIGHT" x="10" y="0"/>
				</Anchors>
			</CheckButton>
			<CheckButton name="$parentButton20" parentKey="button20" inherits="BattlePetTabFlyoutPopupButtonTemplate" id="20">
				<Anchors>
					<Anchor point="LEFT" relativeTo="$parentButton19" relativePoint="RIGHT" x="10" y="0"/>
				</Anchors>
			</CheckButton>
			<Button name="$parentCancelButton" parentKey="cancel" inherits="UIPanelButtonTemplate" text="CANCEL">
				<Size x="78" y="22"/>
				<Anchors>
					<Anchor point="BOTTOMRIGHT" relativeTo="$parent" x="-11" y="13"/>
				</Anchors>
				<Scripts>
					<OnClick>
						PlaySound("gsTitleOptionOK")
						BattlePetTabFlyoutPopupFrame:CancelEdit()
					</OnClick>
				</Scripts>
			</Button>
			<Button name="$parentOkayButton" parentKey="okay" inherits="UIPanelButtonTemplate" text="OKAY">
				<Size x="78" y="22"/>
				<Anchors>
					<Anchor point="RIGHT" relativeTo="$parentCancelButton" relativePoint="LEFT" x="-2" y="0"/>
				</Anchors>
				<Scripts>
					<OnClick>
						PlaySound("gsTitleOptionOK")
						BattlePetTabFlyoutPopupFrame:Okay()
					</OnClick>
				</Scripts>
			</Button>
		</Frames>
		<Scripts>
			<OnLoad>
				self.icons = {}
				self.numIcons = 0

				function self.Okay()
					local name = self.editBox:GetText()
					if strlen(name) > 0 then
						self.button.snapshot.name = name
					end
					if self.iconIndex > 0 then
						self.button.snapshot.icon = "Interface\\Icons\\" .. self.iconTexture
					end
					self:Hide()
					if BattlePetTabFlyoutFrame:IsVisible() then
						BattlePetTabFlyoutFrame:Hide()
						BattlePetTabFlyoutFrame:Show()
					end
				end

				function self.CancelEdit()
					self:Hide()
				end

				function self.IconSelect(index)
					self.iconIndex = index
					self.iconTexture = self.icons[index]
					self.Update(self.scroll)
				end

				function self.Update(scrollFrame)
					local offset = FauxScrollFrame_GetOffset(scrollFrame)
					local index, button, texture, icon
					for i = 1, 20 do -- NUM_MACRO_ICONS_SHOWN
						index = offset * 5 + i -- NUM_ICONS_PER_ROW
						button = BattlePetTabFlyoutPopupFrame["button" .. i]
						texture = button.icon
						icon = self.icons[index]
						if icon and index &lt;= self.numIcons then
							texture:SetTexture("Interface\\Icons\\" .. icon)
							button:Show()
						else
							texture:SetTexture("")
							button:Hide()
						end
						if self.iconIndex == index then
							button:SetChecked(true)
						elseif icon and strfind(strlower(self.iconTexture), strlower(icon), nil, true) then
							button:SetChecked(true)
						else
							button:SetChecked(false)
						end
					end
					FauxScrollFrame_Update(self.scroll, math.ceil(self.numIcons / 5), 4, 36) -- NUM_ICONS_PER_ROW, NUM_ICON_ROWS, MACRO_ICON_ROW_HEIGHT
				end
			</OnLoad>
			<OnShow>
				if self.button then
					PlaySound("igCharacterInfoOpen")

					-- scan all active pets and stored teams for their icons
					local temp = {}
					for i = 1, 3 do -- MAX_ACTIVE_PETS
						local petId = C_PetJournal.GetPetLoadOutInfo(i)
						if petId then
							local _, _, _, _, _, _, _, _, icon = C_PetJournal.GetPetInfoByPetID(petId)
							icon = strmatch(icon or "", "^.+\\.+\\(.+)\.[Bb][Ll][Pp]$")
							if icon then
								temp[strlower(icon)] = 1
							end
						end
					end
					for i = 1, 8 do -- numTabs
						local team = BattlePetTabsDB2[i]
						if type(team) == "table" then
							local icon = strmatch(team.icon, "^.+\\.+\\(.+)\.[Bb][Ll][Pp]$")
							if icon then
								temp[strlower(icon)] = 1
							end
						end
					end
					for i = 1, #BattlePetTabsSnapshotDB.db do
						local snapshot = BattlePetTabsSnapshotDB.db[i]
						for j = 1, 8 do
							local team = snapshot.db[j]
							if type(team) == "table" and type(team.setup) == "table" then
								for k = 1, 3 do
									local petData = team.setup[k]
									if type(petData) == "table" then
										local petId = petData[1]
										if petId then
											local _, _, _, _, _, _, _, _, icon = C_PetJournal.GetPetInfoByPetID(petId)
											icon = strmatch(icon or "", "^.+\\.+\\(.+)\.[Bb][Ll][Pp]$")
											if icon then
												temp[strlower(icon)] = 1
											end
										end
									end
								end
							end
						end
					end
					local temp2 = {}
					for icon, _ in pairs(temp) do
						table.insert(temp2, icon)
					end
					table.sort(temp2)
					self.icons[1] = "INV_Misc_QuestionMark"
					for i, icon in ipairs(temp2) do
						self.icons[1 + i] = icon
					end
					GetMacroIcons(self.icons)
					GetMacroItemIcons(self.icons)
					self.numIcons = #self.icons

					self.iconIndex = 0
					self.iconTexture = self.button.snapshot.icon

					self:ClearAllPoints()
					self:SetPoint("TOPLEFT", self.button, "BOTTOMRIGHT", 0, 0)
					self:SetFrameStrata(self.button:GetFrameStrata())
					self:SetFrameLevel(self.button:GetFrameLevel() + 1)

					self.editBox:SetText(self.button.snapshot.name)
					self.editBox:SetFocus()
					self.Update(self.scroll)
				else
					self:Hide()
				end
			</OnShow>
			<OnHide>
				self.button = nil
				self.numIcons = 0
				table.wipe(self.icons)
				collectgarbage()
			</OnHide>
		</Scripts>
	</Frame>

</Ui>
